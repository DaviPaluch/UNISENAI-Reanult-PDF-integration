// schema.prisma

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Risk {
  id                            String    @id @default(uuid())
  name                          String?
  typeRisk                      String?
  areaResponsibleIdentification String?
  riskEntryDate                 DateTime?
  riskEntryDateWeek             String?
  consequences                  String?
  project                       String?
  metier                        String?
  jalonAffected                 String?
  impactedJalonFuture           String?

  QualitativeAnalysis QualitativeAnalysis?
  ActionPlan          ActionPlan?
}

enum Classification {
  VERY_LOW
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

enum RiskRating {
  SUSTAINABLE
  MODERATE
  SEVERE
  CRITICAL
}

enum Validation {
  IN_TRAJECTORY
  RESOLVED
  AT_RISK
  PROBLEM
}

model QualitativeAnalysis {
  id String @id @default(uuid())

  idRisk String @unique
  risk   Risk   @relation(fields: [idRisk], references: [id])

  probability   Classification?
  impact        Classification?
  riskRating    RiskRating?
  impactRenault String?
}

model ResidualRisk {
  id String @id @default(uuid())

  residualProbability Classification?
  residualImpact      Classification?
  residualRiskRating  RiskRating?
  actionValidation    Validation?
  riskValidation      Validation?
  resolutionDate      DateTime?
  resolutionDateWeek  String?

  ActionPlan ActionPlan?
}

model ActionPlan {
  id String @id @default(uuid())

  idRisk String @unique
  risk   Risk   @relation(fields: [idRisk], references: [id])

  idResidualRisk String?       @unique
  residualRisk   ResidualRisk? @relation(fields: [idResidualRisk], references: [id])

  strategy            String?
  action              String?
  pilotName           String?
  initialPlanDate     DateTime?
  initialPlanDateWeek String?
  alertDate           DateTime?
  alertDateWeek       String?
  resolutionTime      Int?
  time                Float?
  comments            String?
  isCapitalization    Boolean?
}
